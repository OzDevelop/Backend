

1. JPA를 이용할 경우 얻을 수 있는 이점.

2. JPA를 적용해야 하는 프로젝트와 SQL을 직접 사용해야하는 프로젝트의 차이점

3.  객체에 @Entity 어노테이션을 붙여 객체를 만드는게 좋을지, 아니면 따로 ~~Entitiy 객체를 만들어 분리하는 것이 좋을지

    User 객체에 @Entity를 붙여서 사용할 수도 있고, UserEntity 객체를 만들어 분리해서 사용하는 방법도 있음.
    UserEntity 객체로 분리해 사용하게 된다면 관리할 객체가 늘어나는 것이 단점이지만, DB와 비즈니스 로직의 완전한 분리가 가능해진다는 장점이 있음.
    분리없이 사용한다면 기능의 추가에 따라 비즈니스 로직과 상관없는 것들이 엔티티에 추가될 수 있음.


--------------------------------------------------------------------------------------------------------------

Entity를 만든 후, 데이터를 저장하고 조회하는 로직을 위한 레포지토리 작성.
총 3가지 방법으로 해보려고 함.

1. Spring Data JPA의 Query Method 기능을 활용
2. JPQL 사용
3. QueryDSL 사용


--------------------------------------------------------------------------------------------------------------
Ch05-09
서비스 API 구현

UseCase를 구현하기 위해 기능들을 API로 만들려 함.
유저 생성, 팔로우, 팔로우 취소, 유저 정보, 팔로워 유저 리스트, 팔로잉 유저 리스트

먼저 Controller 작성 (user - ui - UserController)

