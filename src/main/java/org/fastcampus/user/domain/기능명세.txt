** 🦖 User 생성 **
1. 유저의 정보를 입력 받음 // Controller
2. 유저의 유효성 정보를 확인(이름 빈 값인지) -> 비즈니스로직
3. 유저 정보 저장 // Repository


** 🦖 Follow 가능 **
1. 팔로우 유저, 팔로우 당하는 유저 입력을 받고 불러오기 // Controller, Service
2. 팔로우 여부 확인하기 // Repository
    - 팔로우 상태라면, 에러를 반환하기 // Service
3. 자기 자신이라면 에러를 반환하기 // Domain
4. 팔로우 유저 카운트 변경 // Domain
5. 팔로잉 유저 카운트 변경 // Domain
6. 팔로우 여부 저장 및 유저 변경 사항 저장 // Repository

** 🦖 게시물 작성 **
1. 게시글의 정보를 입력받는다. //
2. 유저 유효성 확인 - 존재하는 유저인지 //
3. 게시글의 유효성 확인 (5자 이상 500자 이하) // Domain
4. db 게시글 저장 // Repository

** 🦖 댓글 작성 **
1. 댓글의 정보를 입력받기.
2. 유저의 유효성 확인 - 존재하는 유저인지
3. 게시글 유효성 확인 - 존재하는 게시글인지
    + 내용도 있는지
4. 댓글 유효성 확인  // Domain
    - 100자 초과시 에러 반환
5. db 댓글 저장

** 🦖 게시물 상호작용 **
 1. 유저번호와 좋아요를 누를 게시글의 번호를 입력받는다.
 2. 게시글과 유저의 좋아요 존재 여부를 확인 // Repository
 3. 유저 본인 게시글인지 확인 // Domain
 4. 게시글의 좋아요 수 증가
 5. db 저장 및 결과를 반환
